variables:
  DOCKER_REPOSITORY: mendersoftware/mender-connect

stages:
  - test_prep
  - test
  - build
  - publish

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-static.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
#   - project: 'Northern.tech/Mender/mendertesting'
#     file: '.gitlab-ci-check-docker-acceptance.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:unit:
  stage: test
  script:
    # start the dbus service
    - service dbus start
    # original from the gitlab-ci-check-golang-unittests.yml template
    - go list ./... | grep -v vendor | xargs -n1 -I {} -P 4 go test -v -covermode=atomic -coverprofile=../../../{}/coverage.txt {} || exit $?
    - mkdir -p tests/unit-coverage && find . -name 'coverage.txt' -exec cp --parents {} ./tests/unit-coverage \;
    - tar -cvf ${CI_PROJECT_DIR}/unit-coverage.tar tests/unit-coverage

build:make:
  stage: build
  needs: []
  image: golang:1.14-alpine3.11
  before_script:
    - apk add --update git make gcc pkgconfig libc-dev glib-dev
  script:
    - make build
